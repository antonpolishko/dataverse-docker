version: '3'
services:
    reverse-proxy:
      networks:
        - traefik
   # The official v2 Traefik docker image
      image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
      command:
        - "--api=true"
        - "--api.dashboard=true"
        - "--api.insecure=false"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--providers.docker.network=traefik"
        - "--entrypoints.web.address=:80"
        - "--entrypoints.websecure.address=:443"
        - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
        - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
        - "--entrypoints.web.http.redirections.entryPoint.priority=10" # disable permanent forwarding for every route
        - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # <== Enable TLS-ALPN-01 to generate and renew ACME certs
        - "--certificatesresolvers.myresolver.acme.email=${useremail}"
        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"

      ports:
        # The HTTP port
        - "80:80"
        # The HTTPS port
        - "443:443"
        # The Web UI (enabled by --api.insecure=true)
        # - "8089:8080"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
        # volume to store letsencrypt certificates
        - "./letsencrypt:/letsencrypt"
      # Dynamic Configuration
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
        - "traefik.http.routers.dashboard.rule=Host(`dashboard.${traefikhost}`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.http.routers.dashboard.middlewares=auth"

        # https://doc.traefik.io/traefik/middlewares/basicauth/
        # sudo apt install apache2-utils
        # echo $(htpasswd -nb user password) | sed -e 's/\$/$$/g'
        # below are test:test and test2:test2 passwords
        - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0"

    postgres:
      networks:
        - traefik
      container_name: postgres
      ports:
        - "5433:5432"
      image: library/postgres:10.13
      restart: unless-stopped

      environment:
        - "LC_ALL=C.UTF-8"
        - "POSTGRES_DB=dvndb"
        - "POSTGRES_USER=cwuser"
        - "POSTGRES_PASSWORD=dvnsecret"
        - "POSTGRES_PORT=5432"
      volumes:
        - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
 
#    ns:
#      networks:
#        - traefik
#      image: coronawhy/semantic-gateway
#      container_name: namespaces
#      ports:
#        - "8002:80"
#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.ns.rule=Host(`ns.${traefikhost}`)"
#        - "traefik.http.routers.ns.tls=true"
#        - "traefik.http.routers.ns.tls.certresolver=myresolver"
#
#    nde:
#      networks:
#        - traefik
#      image: coronawhy/nde
#      container_name: nde
#      ports:
#        - "8003:8080"
#      labels:
#        - "traefik.enable=true"
#        - "traefik.http.routers.nde.rule=Host(`nde.${traefikhost}`)"
#        - "traefik.http.services.nde.loadbalancer.server.port=8080"
#        - "traefik.http.routers.nde.tls=true"
#        - "traefik.http.routers.nde.tls.certresolver=myresolver"

    solr:
      networks:
        - traefik
      image: ekoindarto/solr-cvm:latest
      container_name: solr
      privileged: true
      ports:
        - "8983:8983"
      environment:
        - "SOLR_HOST=solr"
        - "SOLR_PORT=8983"
        - "SOLR_JAVA_MEM=-Xms1g -Xmx1g"
      volumes:
        - solr-data:/opt/solr/server/solr/collection1/data
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.solr.rule=Host(`solr.${traefikhost}`)"
        - "traefik.http.services.solr.loadbalancer.server.port=8983"
        - "traefik.http.routers.solr.tls=true"
        - "traefik.http.routers.solr.tls.certresolver=myresolver"  

    whoami:
      networks:
        - traefik
      image: "containous/whoami"
      container_name: "whoami"
      labels:
        - "traefik.enable=true"
          # - "traefik.http.routers.whoami.entrypoints=web"
        - "traefik.http.routers.whoami.rule=Host(`whoami.${traefikhost}`)"
        - "traefik.http.routers.whoami.tls=true"
        - "traefik.http.routers.whoami.tls.certresolver=myresolver"  

    dataverse:
      networks:
        - traefik
      image: coronawhy/dataverse:dev
      #image: coronawhy/dataverse:5.1.1-cv
      container_name: dataverse
      privileged: true
      entrypoint: /bin/sh -c 'while :; do echo "============= im dataverse ==========="; set; set > /tmp/env; sleep 30; done'
      ports:
        #- "443:443"
        - "4848:4848"
        - "8085:8080"
      environment:
        - "CVM_SERVER_NAME=CESSDA" #Optional
        - "CVM_SERVER_URL=https://ns.${traefikhost}"
        - "CVM_TSV_SOURCE=https://raw.githubusercontent.com/Dans-labs/semantic-gateway/main/conf/CMM_Custom_MetadataBlock.tsv"
        - "WAR_FILE=https://github.com/IQSS/dataverse-docker/releases/download/5.2-cv/dataverse-5.2-cv.war"

        - "4848:4848"
        - "8085:8080"
        - "CVM_SQL=https://github.com/IQSS/dataverse-docker/releases/download/5.1.1-cv/cv-update.sql"
        - "CVM_CONFIG=https://github.com/IQSS/dataverse-docker/releases/download/5.1.1-cv/cv-keywords.json"
        - "LANG=en"
        - "cvManager=http://"
        - "BUNDLEPROPERTIES=Bundle.properties"
        - "ADMIN_EMAIL=admin@localhost"
        - "MAIL_SERVER=mailrelay"
        - "POSTGRES_SERVER=dataverse-s3.cqyenow6w3eg.us-east-2.rds.amazonaws.com"
        - "POSTGRES_SERVER=postgres"
        - "POSTGRES_PORT=5432"
        - "POSTGRES_DATABASE=dvndb_init"
        - "POSTGRES_USER=cwuser"
        - "PGPASSWORD=dvnsecret"
        - "SOLR_LOCATION=solr:8983"
        - "TWORAVENS_LOCATION=NOT INSTALLED"
        - "RSERVE_HOST=localhost"
        - "RSERVE_PORT=6311"
        - "RSERVE_USER=rserve"
        - "RSERVE_PASSWORD=rserve"
        - "JVM_OPTS='-Xmx1g -Xms1g -XX:MaxPermSize=2g -XX:PermSize=2g'"
      depends_on:
        - solr
#        - ns
      volumes:
        - dataverse-data:/usr/local/payara5/glassfish/domains/domain1/autodeploy
       # - /home/ubuntu/repo/antonpolishko/dataverse-docker/config:/opt/payara/appserver/glassfish/domains/production/config:rw
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dataverse.rule=Host(`dataverse.${traefikhost}`)"
        - "traefik.http.services.dataverse.loadbalancer.server.port=8080"
        - "traefik.http.routers.dataverse.tls=true"
        - "traefik.http.routers.dataverse.tls.certresolver=myresolver"  
volumes:
  database-data:
  solr-data:
  dataverse-data:

networks:
  traefik:
    external: true
